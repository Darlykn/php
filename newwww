<?php
namespace App\LinkedList;

use App\Node;
function reverse($node)
{
    $reversedList = new Node($node->getValue());
    $current = $node -> getNext();

    while ($current) {
        $reversedList = new Node($current->getValue(), $reversedList);
        $current = $current->getNext();
    }
    return $reversedList;
}

<?php

namespace App\HTML;

use Tightenco\Collect;

function getLinks(array $tags): array {
    $mapping = [
        'a' =>
            fn ($tag) => $tag['href'],
        'link' =>
            fn ($tag) => $tag['href'],
        'img' =>
            fn ($tag) => $tag['src'],
    ];

    return collect($tags)
        ->filter(fn ($tag) => in_array($tag['name'], array_keys($mapping)))
        ->map(fn ($tag) => $mapping[$tag['name']]($tag))
        ->values()
        ->all();
}


function stringify($tag) {
    // Открывающий тег
    $html = "<" . $tag['name'];
    
    // Добавление атрибутов
    foreach ($tag as $key => $value) {
        if (!in_array($key, ['name', 'tagType', 'body'])) {
            $html .= " " . $key . '="' . $value . '"';
        }
    }
    
    // Закрытие тега для одиночных тегов
    if ($tag['tagType'] === 'single') {
        $html .= " />";
    } else {
        // Добавление тела и закрывающего тега для парных тегов
        $html .= ">" . $tag['body'] . "</" . $tag['name'] . ">";
    }
    
    return $html;
}

