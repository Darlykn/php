<?php

namespace App\Tests;

use PHPUnit\Framework\TestCase;
use App\Subscription;
use App\User;

class AppTest extends TestCase
{
    public function testSubscriptions()
    {
        $user = new User('vasya@email.com', new Subscription('premium'));
        $result = $user->getCurrentSubscription()->hasPremiumAccess(); // true
        $this->assertTrue($result);
        $result = $user->getCurrentSubscription()->hasProfessionalAccess(); // false
        $this->assertFalse($result);

        $user = new User('vasya@email.com', new Subscription('professional'));
        $result = $user->getCurrentSubscription()->hasPremiumAccess(); // false
        $this->assertFalse($result);
        $result = $user->getCurrentSubscription()->hasProfessionalAccess(); // true
        $this->assertTrue($result);

        $user = new User('vasya@email.com');
        $result = $user->getCurrentSubscription()->hasPremiumAccess(); // false
        $this->assertFalse($result);
        $result = $user->getCurrentSubscription()->hasProfessionalAccess(); // false
        $this->assertFalse($result);

        $user = new User('rakhim@ht.io'); // администратор, проверяется по емейлу
        $result = $user->getCurrentSubscription()->hasPremiumAccess(); // true
        $this->assertTrue($result);
        $result = $user->getCurrentSubscription()->hasProfessionalAccess(); // true
        $this->assertTrue($result);
    }
}





<?php

namespace App;

class Subscription
{
    private $subscriptionPlanName;

    public function __construct($subscriptionPlanName)
    {
        $this->subscriptionPlanName = $subscriptionPlanName;
    }
    public function hasProfessionalAccess()
    {
        return $this->subscriptionPlanName === 'professional';
    }

    public function hasPremiumAccess()
    {
        return $this->subscriptionPlanName === 'premium';
    }
}

<?php

namespace App;

class User
{
    private $currentSubscription;
    private $email;

    public function __construct($email, $currentSubscription = null)
    {
        $this->email = $email;
        // BEGIN (write your solution here)
        
        // END
        
    }

    public function getCurrentSubscription()
    {
        return $this->currentSubscription;
    }

    public function isAdmin()
    {
        return $this->email === 'rakhim@ht.io';
    }
}


<?php

namespace App;

// BEGIN (write your solution here)

// END

