
<?php

namespace App;

class Truncater
{
    const OPTIONS = [
        'separator' => '...',
        'length' => 200,
    ];
    
    private $options = [];

    public function __construct($options = [])
    {
        $this->options = array_merge(self::OPTIONS, $options);
    }
    public function truncate($string, $callOptions = [])
    {
        $newOptions = array_merge($this->options, $callOptions);

        $substr = substr($string, 0, $newOptions['length']);

        if (strlen($substr) < strlen($string)) {
            return "{$substr}{$newOptions['separator']}";
        } else {
            return $substr;
        }
    }
}





<?php

namespace App\Converter;

function toStd(array $array): \stdClass{
    $std = new \stdClass();
    foreach ($array as $key => $value) {
        $std->$key = $value;
    }
    return $std;
}

<?php

namespace App;

class Course
{
    private $name;

    public function __construct($name)
    {
        $this->name = $name;
    }

    public function getName()
    {
        return $this->name;
    }
}
